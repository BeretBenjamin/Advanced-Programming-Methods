******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int v;(v=ValueExp{e=2};print(VarExp{id='v'})))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=2};print(VarExp{id='v'}))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=2};print(VarExp{id='v'}))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=2};print(VarExp{id='v'}))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Ref(int) v;(new(v, ValueExp{e=20});(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=20});(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))))
	Ref(int) v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=20});(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))))
	Ref(int) v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=20});(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=20});(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))))
	new(v, ValueExp{e=20})
}
, symTable=MyDictionary{
	v: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))))
	new(v, ValueExp{e=20})
}
, symTable=MyDictionary{
	v: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))
	Ref(Ref(int)) a
}
, symTable=MyDictionary{
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))
	Ref(Ref(int)) a
}
, symTable=MyDictionary{
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))
	new(a, VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))
	new(a, VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(read heap expression(VarExp{id='a'})))
	new(v, ValueExp{e=30})
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(read heap expression(VarExp{id='a'})))
	new(v, ValueExp{e=30})
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=3, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}, 3=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=3, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}, 3=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=3, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}, 3=30}
}

******************************


******************************
Id: 4
PrgState{
exeStack=MyStack{
	(int v;(v=ValueExp{e=2};print(VarExp{id='v'})))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 4
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=2};print(VarExp{id='v'}))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 4
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=2};print(VarExp{id='v'}))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 4
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=2};print(VarExp{id='v'}))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 4
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=2};print(VarExp{id='v'}))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 4
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	v=ValueExp{e=2}
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 4
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	v=ValueExp{e=2}
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 4
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 4
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 4
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(boolean a;(int v;(a=ValueExp{e=true};((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'})))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int v;(a=ValueExp{e=true};((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'}))))
	boolean a
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int v;(a=ValueExp{e=true};((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'}))))
	boolean a
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int v;(a=ValueExp{e=true};((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'}))))
}
, symTable=MyDictionary{
	a: false
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int v;(a=ValueExp{e=true};((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'}))))
}
, symTable=MyDictionary{
	a: false
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(a=ValueExp{e=true};((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'})))
	int v
}
, symTable=MyDictionary{
	a: false
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(a=ValueExp{e=true};((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'})))
	int v
}
, symTable=MyDictionary{
	a: false
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(a=ValueExp{e=true};((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'})))
}
, symTable=MyDictionary{
	a: false
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(a=ValueExp{e=true};((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'})))
}
, symTable=MyDictionary{
	a: false
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'}))
	a=ValueExp{e=true}
}
, symTable=MyDictionary{
	a: false
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'}))
	a=ValueExp{e=true}
}
, symTable=MyDictionary{
	a: false
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'}))
}
, symTable=MyDictionary{
	a: true
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	((IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}));print(VarExp{id='v'}))
}
, symTable=MyDictionary{
	a: true
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	(IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}))
}
, symTable=MyDictionary{
	a: true
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	(IF(VarExp{id='a'}) THEN(v=ValueExp{e=2})ELSE(v=ValueExp{e=3}))
}
, symTable=MyDictionary{
	a: true
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	v=ValueExp{e=2}
}
, symTable=MyDictionary{
	a: true
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	v=ValueExp{e=2}
}
, symTable=MyDictionary{
	a: true
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: true
	v: 2
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: true
	v: 2
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	a: true
	v: 2
}
, out=MyList{
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(string varf;(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
	string varf
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
	string varf
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
	varf=ValueExp{e=test.in}
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
	varf=ValueExp{e=test.in}
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
	openRFile(exp=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
	openRFile(exp=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
	int varc
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
	int varc
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
	40
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
	40
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@68377a08
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
	40
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int v;(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
	Ref(int) a
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
	Ref(int) a
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(int) v;(new(v, ValueExp{e=20});(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=20});(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))))
	Ref(int) v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=20});(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))))
	Ref(int) v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=20});(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=20});(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))))
	new(v, ValueExp{e=20})
}
, symTable=MyDictionary{
	v: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))))
	new(v, ValueExp{e=20})
}
, symTable=MyDictionary{
	v: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(Ref(int)) a;(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))
	Ref(Ref(int)) a
}
, symTable=MyDictionary{
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))
	Ref(Ref(int)) a
}
, symTable=MyDictionary{
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(a, VarExp{id='v'});(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))
	new(a, VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))
	new(a, VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v, ValueExp{e=30});print(read heap expression(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(read heap expression(read heap expression(VarExp{id='a'})))
	new(v, ValueExp{e=30})
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(read heap expression(read heap expression(VarExp{id='a'})))
	new(v, ValueExp{e=30})
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(read heap expression(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=2, locationType=Ref(int)}
	v: RefValue{address=3, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20, 2=RefValue{address=1, locationType=int}, 3=30}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int a;(int b;(a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1};(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'})))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int b;(a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1};(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'}))))
	int a
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int b;(a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1};(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'}))))
	int a
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int b;(a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1};(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'}))))
}
, symTable=MyDictionary{
	a: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int b;(a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1};(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'}))))
}
, symTable=MyDictionary{
	a: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1};(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'})))
	int b
}
, symTable=MyDictionary{
	a: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1};(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'})))
	int b
}
, symTable=MyDictionary{
	a: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1};(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'})))
}
, symTable=MyDictionary{
	a: 0
	b: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1};(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'})))
}
, symTable=MyDictionary{
	a: 0
	b: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'}))
	a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1}
}
, symTable=MyDictionary{
	a: 0
	b: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'}))
	a=ArithExp{e1=ValueExp{e=2}, e2=ArithExp{e1=ValueExp{e=3}, e2=ValueExp{e=5}, op=3}, op=1}
}
, symTable=MyDictionary{
	a: 0
	b: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'}))
}
, symTable=MyDictionary{
	a: 17
	b: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1};print(VarExp{id='b'}))
}
, symTable=MyDictionary{
	a: 17
	b: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='b'})
	b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1}
}
, symTable=MyDictionary{
	a: 17
	b: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='b'})
	b=ArithExp{e1=VarExp{id='a'}, e2=ValueExp{e=1}, op=1}
}
, symTable=MyDictionary{
	a: 17
	b: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='b'})
}
, symTable=MyDictionary{
	a: 17
	b: 18
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='b'})
}
, symTable=MyDictionary{
	a: 17
	b: 18
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	a: 17
	b: 18
}
, out=MyList{
	18
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int v;(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
	Ref(int) a
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
	Ref(int) a
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
	v=ValueExp{e=10}
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
	v=ValueExp{e=10}
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	new(a, ValueExp{e=22})
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	new(a, ValueExp{e=22})
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	Write heap(a, ValueExp{e=30})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	Write heap(a, ValueExp{e=30})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	v=ValueExp{e=32}
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	v=ValueExp{e=32}
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
	32
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
	32
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
	32
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int v;(v=ValueExp{e=4};(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'}))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=4};(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'})))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=4};(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'})))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=4};(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'})))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=4};(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'})))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'}))
	v=ValueExp{e=4}
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'}))
	v=ValueExp{e=4}
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'}))
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'}))
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
	4
	3
	2
	1
	0
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(string varf;(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
	string varf
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
	string varf
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
	varf=ValueExp{e=test.in}
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
	varf=ValueExp{e=test.in}
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
	openRFile(exp=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
	openRFile(exp=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
	int varc
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
	int varc
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
	40
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
	40
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@df4a596
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
	40
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int v;(v=ValueExp{e=4};(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'}))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=4};(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'})))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=4};(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'})))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=4};(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'})))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=4};(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'})))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'}))
	v=ValueExp{e=4}
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'}))
	v=ValueExp{e=4}
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'}))
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2});print(VarExp{id='v'}))
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 4
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 3
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 2
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	(print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
	v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2}
}
, symTable=MyDictionary{
	v: 1
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
	while(RelationalExpressions{firstExpression=VarExp{id='v'}, secondExpression=ValueExp{e=0}, intOperand=3}) (print(VarExp{id='v'});v=ArithExp{e1=VarExp{id='v'}, e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
	4
	3
	2
	1
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
	4
	3
	2
	1
	0
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(int v;(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
	Ref(int) a
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
	Ref(int) a
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
	v=ValueExp{e=10}
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
	v=ValueExp{e=10}
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	new(a, ValueExp{e=22})
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	new(a, ValueExp{e=22})
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	Write heap(a, ValueExp{e=30})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	Write heap(a, ValueExp{e=30})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	v=ValueExp{e=32}
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	v=ValueExp{e=32}
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
	32
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
	32
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
	32
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(string varf;(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
	string varf
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
	string varf
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(varf=ValueExp{e=test.in};(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))))
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
	varf=ValueExp{e=test.in}
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
	varf=ValueExp{e=test.in}
}
, symTable=MyDictionary{
	varf: 
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(openRFile(exp=VarExp{id='varf'});(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
	openRFile(exp=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
	openRFile(exp=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int varc;(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))))
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
	int varc
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
	int varc
}
, symTable=MyDictionary{
	varf: test.in
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc');(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'})))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
	ReadFileStatement(expression=VarExp{id='varf'}, variable_name=varc')
}
, symTable=MyDictionary{
	varf: test.in
	varc: 15
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(VarExp{id='varc'});closeRFile(expression=VarExp{id='varf'}))
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
	print(VarExp{id='varc'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
	40
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	closeRFile(expression=VarExp{id='varf'})
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
	40
}
, fileTable=MyFileTable{
	test.in: java.io.BufferedReader@4dc76a86
}
, heap={}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	varf: test.in
	varc: 40
}
, out=MyList{
	15
	40
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(int v;(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
	int v
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Ref(int) a;(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))))
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
	Ref(int) a
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
	Ref(int) a
}
, symTable=MyDictionary{
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=10};(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
	v=ValueExp{e=10}
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
	v=ValueExp{e=10}
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 0
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(new(a, ValueExp{e=22});(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	new(a, ValueExp{e=22})
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	new(a, ValueExp{e=22})
}
, symTable=MyDictionary{
	a: RefValue{address=0, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))));(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	fork((Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(a, ValueExp{e=30});(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	Write heap(a, ValueExp{e=30})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
	Write heap(a, ValueExp{e=30})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=22}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(v=ValueExp{e=32};(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'}))))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	v=ValueExp{e=32}
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
	v=ValueExp{e=32}
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 10
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(VarExp{id='v'});print(read heap expression(VarExp{id='a'})))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
	print(VarExp{id='v'})
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
	32
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	print(read heap expression(VarExp{id='a'}))
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
	32
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	a: RefValue{address=1, locationType=int}
	v: 32
}
, out=MyList{
	10
	30
	32
	30
}
, fileTable=MyFileTable{
}
, heap={1=30}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(Ref(int) v1;(int cnt;(new(v1, ValueExp{e=2});(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))))))))
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int cnt;(new(v1, ValueExp{e=2});(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))))))
	Ref(int) v1
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int cnt;(new(v1, ValueExp{e=2});(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))))))
	Ref(int) v1
}
, symTable=MyDictionary{
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int cnt;(new(v1, ValueExp{e=2});(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))))))
}
, symTable=MyDictionary{
	v1: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(int cnt;(new(v1, ValueExp{e=2});(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))))))
}
, symTable=MyDictionary{
	v1: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v1, ValueExp{e=2});(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))))))
	int cnt
}
, symTable=MyDictionary{
	v1: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v1, ValueExp{e=2});(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))))))
	int cnt
}
, symTable=MyDictionary{
	v1: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v1, ValueExp{e=2});(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))))))
}
, symTable=MyDictionary{
	cnt: 0
	v1: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(new(v1, ValueExp{e=2});(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))))))
}
, symTable=MyDictionary{
	cnt: 0
	v1: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))))
	new(v1, ValueExp{e=2})
}
, symTable=MyDictionary{
	cnt: 0
	v1: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))))
	new(v1, ValueExp{e=2})
}
, symTable=MyDictionary{
	cnt: 0
	v1: RefValue{address=0, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))))
}
, symTable=MyDictionary{
	cnt: 0
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1});(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))))
}
, symTable=MyDictionary{
	cnt: 0
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))))
	newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1})
}
, symTable=MyDictionary{
	cnt: 0
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))))
	newSemaphore(cnt, read heap expression(VarExp{id='v1'}), ValueExp{e=1})
}
, symTable=MyDictionary{
	cnt: 0
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))));(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))
	fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))
	fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))));(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))
	fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))
	fork((acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@6b79017a}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(acquire(cnt);(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt)))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(acquire(cnt);(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(read heap expression(VarExp{id='v1'}));release(cnt))
	Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3})
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(read heap expression(VarExp{id='v1'}));release(cnt))
	Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3})
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=2}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(read heap expression(VarExp{id='v1'}));release(cnt))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	(print(read heap expression(VarExp{id='v1'}));release(cnt))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	release(cnt)
	print(read heap expression(VarExp{id='v1'}))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	release(cnt)
	print(read heap expression(VarExp{id='v1'}))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	release(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
	release(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@26f1cdf5}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@177d8df4}
}

******************************


******************************
Id: 2
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@177d8df4}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@177d8df4}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@177d8df4}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@177d8df4}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	(print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2});release(cnt))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	release(cnt)
	print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	release(cnt)
	print(ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=1}, op=2})
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	release(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
	release(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@6c8b5343}
}

******************************


******************************
Id: 1
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@4625757d}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@4625757d}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
	acquire(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@4625757d}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3});(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt))))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))
	Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3})
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))
	Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=10}, op=3})
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=20}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=200}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3});(print(read heap expression(VarExp{id='v1'}));release(cnt)))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=200}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(read heap expression(VarExp{id='v1'}));release(cnt))
	Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3})
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=200}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(read heap expression(VarExp{id='v1'}));release(cnt))
	Write heap(v1, ArithExp{e1=read heap expression(VarExp{id='v1'}), e2=ValueExp{e=2}, op=3})
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=200}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(read heap expression(VarExp{id='v1'}));release(cnt))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=400}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	(print(read heap expression(VarExp{id='v1'}));release(cnt))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=400}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	release(cnt)
	print(read heap expression(VarExp{id='v1'}))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=400}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	release(cnt)
	print(read heap expression(VarExp{id='v1'}))
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
}
, fileTable=MyFileTable{
}
, heap={1=400}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	release(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
	400
}
, fileTable=MyFileTable{
}
, heap={1=400}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
	release(cnt)
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
	400
}
, fileTable=MyFileTable{
}
, heap={1=400}
, semaphoretable{1=model.ADT.Tuple@2f8f580}
}

******************************


******************************
Id: 3
PrgState{
exeStack=MyStack{
}
, symTable=MyDictionary{
	cnt: 1
	v1: RefValue{address=1, locationType=int}
}
, out=MyList{
	20
	19
	400
}
, fileTable=MyFileTable{
}
, heap={1=400}
, semaphoretable{1=model.ADT.Tuple@1bc80a88}
}

******************************


